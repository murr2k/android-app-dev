name: Build Release (Signed)

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build output type'
        required: true
        default: 'aab'
        type: choice
        options:
          - apk
          - aab
          - both

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle Cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/.gradle/notifications
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Decode and save keystore
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      run: |
        cd android
        echo "$KEYSTORE_BASE64" | base64 --decode > linknode-release.keystore
        echo "Keystore decoded and saved"
        
    - name: Make gradlew executable
      run: chmod +x android/gradlew
      
    - name: Build Release APK
      if: ${{ github.event.inputs.build_type == 'apk' || github.event.inputs.build_type == 'both' }}
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        GITHUB_RUN_NUMBER: ${{ github.run_number }}
      run: |
        cd android
        ./gradlew assembleRelease --no-daemon
        
    - name: Build Release AAB
      if: ${{ github.event.inputs.build_type == 'aab' || github.event.inputs.build_type == 'both' }}
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        GITHUB_RUN_NUMBER: ${{ github.run_number }}
      run: |
        cd android
        ./gradlew bundleRelease --no-daemon
        
    - name: Upload APK
      if: ${{ github.event.inputs.build_type == 'apk' || github.event.inputs.build_type == 'both' }}
      uses: actions/upload-artifact@v4
      with:
        name: linknode-release-apk-signed
        path: android/app/build/outputs/apk/release/app-release.apk
        
    - name: Upload AAB
      if: ${{ github.event.inputs.build_type == 'aab' || github.event.inputs.build_type == 'both' }}
      uses: actions/upload-artifact@v4
      with:
        name: linknode-release-aab-signed
        path: android/app/build/outputs/bundle/release/app-release.aab
        
    - name: Build Summary
      run: |
        echo "### ðŸš€ Build Complete!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Version Code:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        echo "**Build Type:** ${{ github.event.inputs.build_type }}" >> $GITHUB_STEP_SUMMARY
        echo "**Signing:** Production keystore âœ“" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "ðŸ“¦ **This build is signed with your production keystore and ready for Google Play Console upload**" >> $GITHUB_STEP_SUMMARY